% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/orchard_plot.R
\name{orchard_plot}
\alias{orchard_plot}
\title{orchard_plot}
\usage{
orchard_plot(
  object,
  mod = "1",
  group,
  data,
  xlab,
  N = "none",
  alpha = 0.5,
  angle = 90,
  cb = FALSE,
  k = TRUE,
  g = TRUE,
  trunk.size = 3,
  branch.size = 1.2,
  twig.size = 0.5,
  transfm = c("none", "tanh"),
  condition.lab = "Condition",
  legend.pos = c("bottom.right", "bottom.left", "top.right", "top.left", "top.out",
    "bottom.out"),
  k.pos = c("right", "left"),
  weights = "prop",
  by = NULL,
  at = NULL,
  marginal = FALSE
)
}
\arguments{
\item{object}{model object of class 'rma.mv', 'rma' or 'orchard' table of model results}

\item{mod}{the name of a moderator. Otherwise, "1" for intercept only model. Not needed of a orchard_plot is provided with a mod_results object of class 'orchard'.}

\item{group}{The grouping variable that one wishes to plot beside total effect sizes, k. This could be study, species or whatever other grouping variable one wishes to present sample sizes. Not needed of a orchard_plot is provided with a mod_results object of class 'orchard'.}

\item{data}{The data frame used to fit the rma.mv model object}

\item{xlab}{The effect size measure label.}

\item{N}{The vector of sample size which an effect size is based on. If default, we use precision (the inverse of sampling standard error)}

\item{alpha}{The level of transparency for pieces of fruit (effect size)}

\item{angle}{The angle of y labels. The default is 90 degrees}

\item{cb}{If TRUE, it uses 20 colour blind friendly colors}

\item{k}{If TRUE, it displays k (number of effect sizes) on the plot}

\item{g}{If TRUE, it displays g (number of grouping levels for each level of the moderator) on the plot}

\item{trunk.size}{Size of the mean, or central point.}

\item{branch.size}{Size of the confidence intervals}

\item{twig.size}{Size of the prediction intervals}

\item{transfm}{If set to "tanh", a tanh transformation will be applied to effect sizes, converting Zr will to a correlation or pulling in extreme values for other effect sizes (lnRR, lnCVR, SMD). If "none" is chosen then it will default to}

\item{condition.lab}{Label for the condition being marginalized over.}

\item{legend.pos}{Where to place the legend}

\item{k.pos}{Where to put k (number of effect sizes) on the plot}

\item{weights}{Used when one wants marginalised means. How to marginalize categorical variables. The default is weights = "prop", which wights means for moderator levels based on their proportional representation in the data. For example, if "sex" is a moderator, and males have a larger sample size than females, then this will produce a weighted average, where males are weighted more towards the mean than females. This may not always be ideal. IN the case if sex, for example, males and females are roughly equally prevalent in a population. As such, you can give the moderator levels equal weight using weights = "equal".}

\item{at}{Used when one wants marginalised means. The 'condition' that one wishes to calculate the means at, but is not presented in output}
}
\value{
Orchard plot
}
\description{
Using a metafor model object of class rma or rma.mv or a results table of class orchard, it creates a an orchard plot from mean effect size estimates for all levels of a given categorical moderator, their corresponding confidence intervals and prediction intervals
}
\examples{
\dontrun{
data(eklof)
eklof<-metafor::escalc(measure="ROM", n1i=N_control, sd1i=SD_control,
m1i=mean_control, n2i=N_treatment, sd2i=SD_treatment, m2i=mean_treatment,
data=eklof)
# Add the unit level predictor
eklof$Datapoint<-as.factor(seq(1, dim(eklof)[1], 1))
# fit a MLMR - accounting for some non-independence
eklof_MR<-metafor::rma.mv(yi=yi, V=vi, mods=~ Grazer.type-1, random=list(~1|ExptID, ~1|Datapoint), data=eklof)
results <- mod_results(eklof_MR, mod = "Grazer.type", group = "ExptID", data = eklof)
orchard_plot(results, mod = "Grazer.type", group = "ExptID", xlab = "log(Response ratio) (lnRR)")
# or
orchard_plot(eklof_MR, mod = "Grazer.type", group = "ExptID", xlab = "log(Response ratio) (lnRR)", data = eklof)

# Example 2
data(lim)
lim$vi<- 1/(lim$N - 3)
lim_MR<-metafor::rma.mv(yi=yi, V=vi, mods=~Phylum-1, random=list(~1|Article,
~1|Datapoint), data=lim)
orchard_plot(lim_MR, mod = "Phylum", group = "Article", xlab = "Correlation coefficient", transfm = "tanh", N = lim$N, data = lim)
}
}
\author{
Shinichi Nakagawa - s.nakagawa@unsw.edu.au

Daniel Noble - daniel.noble@anu.edu.au
}
